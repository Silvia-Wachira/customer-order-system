services:
  db:
    container_name: postagram_db
    image: postgres:14.3-alpine
    env_file: .env
    environment:
      - POSTGRES_USER=unicorn
      - POSTGRES_PASSWORD=wCh29&HE&T83
      - POSTGRES_DB=nyatidb
      
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unicorn -d nyatidb"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    container_name: postagram_api
    build: .
    restart: unless-stopped
    env_file: .env
    ports:
      - "8081:8080" # I've changed from "8080:8080" since my port is 8080 is already in use
    command: >
      sh -c "python manage.py migrate --no-input && gunicorn UnicornRoot.wsgi:application --bind 0.0.0.0:8080"
    volumes:
      - .:/app
      - uploads_volume:/app/uploads
    depends_on:
      db:
        condition: service_healthy

volumes:
  uploads_volume:
  postgres_data: